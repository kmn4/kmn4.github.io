[{"content":"2 年半前、持て余していたドメインを使うため雑に構築し (、放置してい) た本ブログだが、なんとなく Anatole を使っていた。\nでも色々と不満点があったため、以下の要件のもと別テーマに移行することとした。\n PC から見たときに記事本文の左右に十分な余白があり読みやすい 検索機能がある タグ機能がある 投稿年から記事を探せる  Hugo Themes を眺め、スターが多く上記を満たし見た目もいい感じなものを探すと Stack が見つかった。\nちなみに現状だとタグ機能も投稿年から探す機能も使っていないが、これは記事が少なすぎてまだ必要ないため。増えたら使う。\n導入と設定の方法 Ubuntu なら:\n1 2 3 4 5 6 7  $ sudo apt install golang-go hugo # Go が必須 $ hugo mod init kamasaki.net/blog $ hugo mod get github.com/CaiJimmy/hugo-theme-stack/v3 \u0026amp;\u0026amp; hugo mod tidy $ mkdir -p config/_default \u0026amp;\u0026amp; cat \u0026lt;\u0026lt;EOF \u0026gt; config/_default/module.toml [[imports]] path = \u0026#34;github.com/CaiJimmy/hugo-theme-stack/v3\u0026#34; EOF   設定は hugo-theme-stack-starter を参考にすればよい。\n日本語フォントが変 Android の Firefox から見ると普通なのに、Windows の Firefox から見るとフォントに中国を感じる。\nabout:preferences から「ウェブページが指定したフォントを優先する」のチェックを外すと日本語らしくなるので、Stack がおかしなフォントを指定しているようだ。\n開発者ツールから有効なスタイルを調べると怪しいフォントを発見。中国語の言語コードって zh なんですね。\n消してみると日本語フォントになったため、これを使わないように Stack を設定してやろう。\nドキュメントにカスタマイズの具体例が載っているので参考にする。\n今回は --zh-font-family を Noto Sans JP にしてしまう。\nlayouts/partials/head/custom.html に以下のようなコードを置いてやろう。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  \u0026lt;style\u0026gt; /* Overwrite CSS variable */ :root { --zh-font-family: \u0026#34;Noto Sans JP\u0026#34;; } \u0026lt;/style\u0026gt; \u0026lt;script\u0026gt; (function () { const customFont = document.createElement(\u0026#39;link\u0026#39;); customFont.href = \u0026#34;https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700\u0026amp;display=swap\u0026#34;; customFont.type = \u0026#34;text/css\u0026#34;; customFont.rel = \u0026#34;stylesheet\u0026#34;; document.head.appendChild(customFont); }()); \u0026lt;/script\u0026gt;   ビルドし直すと Noto Sans JP が使われるようになった。\nしかし、言語コードとして ja-jp が指定されていたら自動で日本語フォントを使って欲しいので、暇があったら PR を出したいところ。\nTOC を表示できない SEO が理由で hugo-theme-stack-starter の (Hugo の?) 初期設定だとレベル 1 の見出しは TOC に現れません1。\n1 2 3 4  [tableOfContents] endLevel = 4 ordered = true startLevel = 2   見出しはレベル 2 以上にしましょう。\nおまけ Shortcodesの使用例として、最近聴いてよかった曲を置いておく。\n    リンク先だと「タイトルがページ内の唯一の \u0026lt;h1\u0026gt; であるべき」と言われているが、Stack はタイトルに \u0026lt;h2\u0026gt; を使っているようで少し不自然だ。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2023-12-27T21:56:43+09:00","permalink":"https://blog.kamasaki.net/post/migrate-hugo-theme-to-stack/","title":"Hugo のテーマを Stack に変えた"},{"content":"Google Domains が Squarespace に売却されたので、kamasaki.net を Cloudflare に移管した。\nその際 MX レコードには特に問題がなかったが、GitHub Pages で構築したこのブログにアクセスできなくなっていた。\n解決法 kmn4.github.io に向けていた CNAME レコードの proxy status を DNS only にすることで、無事 HTTPS アクセスができるようになった。\n原因と思しきもの 解決まで紆余曲折あったため十分に検証できていないが、恐らくこの問題が関係している。\nCloudflare の DNS レコード設定には \u0026ldquo;Proxy status\u0026rdquo; という項目があって、これが \u0026ldquo;Proxied\u0026rdquo; だと、dig ったときに Cloudflare の IP アドレスが返ってくる12。\nこれにより GitHub Pages への HTTP(S) トラフィックは必ず Cloudflare を通ることとなり、Cloudflare 側でキャシュや DDoS 対策ができるらしいが、それと同時に GitHub 側が HTTPS 用のサーバ証明書を更新できなくなるようだ34。\n  https://developers.cloudflare.com/dns/manage-dns-records/reference/proxied-dns-records/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Cloudflare の IP アドレスレンジはこちら: https://www.cloudflare.com/ips/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n ACME プロトコルによるドメイン検証ができなくなるということだろうが、詳しくないので説明できない。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n この理屈なら DNS レコード修正前でも HTTP ではアクセスできたはずだが、修正前に試してないためなんとも言えない。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2023-12-26T20:57:50+09:00","permalink":"https://blog.kamasaki.net/post/fix-github-pages-after-migration-to-cloudflare-registrar/","title":"Cloudflare へのドメイン移管後に GitHub Pages が壊れた"},{"content":"てすと\nああああ\n   key value     k v !    1 2 3 4  sealed trait Exp[A] case object True extends Exp[Boolean] case object Flase extends Exp[Boolean] case class Eq(e1: Exp[Int], e2: Exp[Int]) extends Exp[Boolean]   ","date":"2021-06-26T16:08:07+09:00","permalink":"https://blog.kamasaki.net/post/test/","title":"Test"}]